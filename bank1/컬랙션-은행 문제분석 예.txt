- 기능
   1.계좌개설 2.입금 3.출금 4.계좌이체 5.잔액조회 6.거래내역
   7.계좌번호검색 8.이름검색 9.계좌리스트 10.종료
   선택 =>

- 저장 정보
  1. 거래내역 내역(TransactionVO)
     거래일자(transaction_date), 구분(kind:입금, 출금), 거래액(amount), 잔고(balance), 내역(info:계좌이체등)

  2. 계좌정보 및 계좌 거래 내역 정보(Account)
     계좌번호(accountNo), 이름(name), 패스워드(pwd), 개설일자(launch_date), 
     거래내역(List<TransactionVO>)

      거래 내역 등록 : void addTransaction(TransactionVO vo)
      거래 내역 리스트 : List<TransactionVO> transactionList()
      마지막 거래 내역 : TransactionVO lastTransaction()
      
  3. Bank
     List<Account> accountList

     계좌개설 : Account addAccount(String owner, String pwd)
     입금 : long deposit(String accountNo, long amount)
     출금 : long withdraw(String accountNo, String pwd, long amount)
     계좌이체 : long accountTransfer(String fromAccountNo, String fromPwd, String toAccountNo, long amount)
     잔액조회 : long balance(String accountNo, String pwd)
     잔액조회 : long balance(String accountNo)
     거래내역조회 : List<TransactionVO> transactionHistory(String accountNo, String pwd)
     거래내역조회 : List<TransactionVO> transactionHistory(String accountNo)

     계좌-번호검색 : Account readAccount(String accountNo)
     계좌-번호검색 : Account readAccount(String accountNo, String pwd)
     계좌-이름검색 : List<Account> getAccountList(String owner)
     계좌-전체리스트 : List<Account> getAccountList()

4. 계좌번호
    String s = "020-08-0000001";
    String s1 = s.substring(0, s.lastIndexOf("-"));
    String s2 = s.substring(s.lastIndexOf("-") + 1);
		
    int n = Integer.parseInt(s2) + 1;
		
    s = s1 + "-" + String.format("%07d", n);
    System.out.println(s);
